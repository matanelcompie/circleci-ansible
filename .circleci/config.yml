version: 2.1
jobs:
  deploy:
    machine:
      enabled: true
    working_directory: ~/app
    environment:
      VAR: "<< pipeline.parameters.var1 >>"
    steps:
      - checkout
      - run: pwd; ls; echo -e "$SSH_HOST\n${SSH_HOST}\n\n$VAR\n<< pipeline.parameters.var1 >>" # delete (for test)
      - run: ssh $SSH_USER@$SSH_HOST "hostname" # delete (for test)
      - run: echo $SSH_PRIVATE_HOST >> ./ansible/inventory; cat ./ansible/inventory # insert private host ip to ansible inventory
      - run: scp -r ./ansible "$SSH_USER@$SSH_HOST:/home/$SSH_USER" # copy ansible directory to Bastion EC2 host with new inventore (from checkout)
      - when:
          condition: 
            and:
              - equal: [ value1, << pipeline.parameters.var1 >> ]
          steps:
            - run: ssh $SSH_USER@$SSH_HOST "cd ansible; ansible -i dev -m file -a 'path=/home/ubuntu/${VAR}.txt state=touch'" # run ansible
      - when:
          condition: 
            and:
              - equal: [ value2, << pipeline.parameters.var2 >> ]
          steps:
            - run: ssh $SSH_USER@$SSH_HOST "cd ansible; ansible dev -m file -a 'path=/home/ubuntu/<< pipeline.parameters.var1 >>.txt state=touch'" # run ansible 
parameters:
  var1:
    type: string
    default: "value1"
  var2:
    type: string
    default: "value2"

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: main # only deploy on the main branch
# ssh $SSH_USER@$SSH_HOST "ansible dev -m command -a 'hostname'"
# - run: ssh $SSH_USER@$SSH_HOST "ansible-playbook /home/ubuntu/ansible/playbook.yaml"
# - run: ssh $SSH_USER@$SSH_HOST "ansible dev -i /home/ubuntu/ansible/inventory -m file -a 'path=/home/ubuntu/ubuntu_test.txt state=touch'"
#- run: ssh $SSH_USER@$SSH_HOST "ansible all -i inventory -m ping"
